<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SOL跟单-交易</title>
    <link href="/main.css" rel="stylesheet">
    <!-- <script src="https://cdn.tailwindcss.com"></script> -->
    <script src="/sweetalert.min.js" type="text/javascript"></script>
</head>

<body class="bg-gray-100 dark:bg-gray-900">
    <div class="max-w-screen-lg mx-auto p-4">
        <h1 class="text-2xl font-bold text-center mb-4 dark:text-gray-50">SOL交易</h1>
        <div class="mb-4 p-3 bg-white dark:bg-gray-600 dark:text-gray-400 rounded grid grid-cols-1">
            <p class="font-medium">Token: <%=position.symbol%>[<%=position.token%>]</p>
            <p class="font-medium">当前持仓: <%=position.balance%>
            </p>
            <p class="font-medium">跟单钱包:<%=position.followWallet%>
            </p>
        </div>
        <div class="mt-8 p-4 bg-white dark:bg-gray-600 dark:text-gray-400 rounded-lg">
            <h3 class="text-lg font-semibold mb-4">限价单</h3>
            <% if (!limitOrders || limitOrders.length === 0) { %>
            <p>无</p>
            <% } else { %>
            <% limitOrders.forEach(function(order) { %>
                <div class="mb-2">
                <p class="flex items-center gap-4">价格: <%= order.limitPrice %>  卖出: <%= order.sellPercent %> % <button type="button"
                    class="w-36 bg-red-500 text-white dark:text-gray-300 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2"
                    onclick="deleteLimitOrder('<%=order.id%>')">
                    删除
                </button></p>
                </div>
            <% }); %>
            <% } %>
        </div>
        <div class="mt-8 p-4 bg-white dark:bg-gray-600 dark:text-gray-400 rounded-lg">
            <h3 class="text-lg font-semibold mb-4">按百分比卖出</h3>
            <div class="flex justify-between space-x-2">
                <button type="button"
                    class="flex-1 bg-blue-500 dark:bg-blue-700 text-white dark:text-gray-300 py-2 rounded-md hover:bg-blue-600 dark:hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-700 focus:ring-offset-2 dark:focus:ring-offset-gray-900"
                    onclick="sell('<%=id%>',0.25)">
                    25%
                </button>
                <button type="button"
                    class="flex-1 bg-blue-500 dark:bg-blue-700 text-white dark:text-gray-300 py-2 rounded-md hover:bg-blue-600 dark:hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-700 focus:ring-offset-2 dark:focus:ring-offset-gray-900"
                    onclick="sell('<%=id%>',0.5)">
                    50%
                </button>
                <button type="button"
                    class="flex-1 bg-blue-500 dark:bg-blue-700 text-white dark:text-gray-300 py-2 rounded-md hover:bg-blue-600 dark:hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-700 focus:ring-offset-2 dark:focus:ring-offset-gray-900"
                    onclick="sell('<%=id%>',1)">
                    100%
                </button>

            </div>
        </div>
        <div class="mt-8 p-4 bg-white dark:bg-gray-600 dark:text-gray-400 rounded-lg">
            <h3 class="text-lg font-semibold mb-4">修改余额</h3>
            <div id="balance-form" class="space-y-4">
                <input type="number" id="new-balance" name="newBalance"
                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                    required>
                <button type="button" onclick="updateBalance('<%=id%>', document.getElementById('new-balance').value)"
                    class="w-full bg-blue-500 dark:bg-blue-700 text-white dark:text-gray-300 py-2 rounded-md hover:bg-blue-600 dark:hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-700 focus:ring-offset-2 dark:focus:ring-offset-gray-900">更新余额</button>
            </div>
        </div>
        <div class="mt-8 p-4 bg-white dark:bg-gray-600 dark:text-gray-400 rounded-lg">
            <h3 class="text-lg font-semibold mb-4">继续买入</h3>
            <div id="balance-form" class="space-y-4">
                <input id="token"
                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                    value="<%=position.token%>"
                    required>
                <button type="button" onclick="buy(document.getElementById('token').value)"
                    class="w-full bg-blue-500 dark:bg-blue-700 text-white dark:text-gray-300 py-2 rounded-md hover:bg-blue-600 dark:hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-700 focus:ring-offset-2 dark:focus:ring-offset-gray-900">继续买入</button>
            </div>
        </div>
        <div class="mt-8 p-4 bg-white dark:bg-gray-600 rounded-lg">

            <button type="button" onclick="deletePosition('<%=id%>')"
                class="w-full bg-red-500 text-white dark:text-gray-300 py-2 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2">删除持仓</button>
        </div>
    </div>
    <script>
        async function confirmAndExecute(title, url, body) {
            const result = await Swal.fire({
                title: '确认交易',
                text: `您确定要${title}吗？`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '确定',
                cancelButtonText: '取消'
            });

            if (!result.isConfirmed) {
                return;
            }
            Swal.fire({
                title: '处理中...',
                html: `正在${title}，请稍候`,
                allowOutsideClick: false,
                allowEscapeKey: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
            try {
                let payload = {
                    method: 'POST'
                };
                if (body) {
                    payload.headers = {
                        'Content-Type': 'application/json'
                    };
                    payload.body = JSON.stringify(body);
                }
                const resp = await fetch(url, payload);
                if (!resp.ok) {
                    throw new Error(resp.statusText);
                }
                await Swal.fire({
                    title: '操作完成',
                    text: `${title}成功！`,
                    icon: 'success'
                });
                window.location.href = '/';
            } catch (e) {
                console.error(e);
                await Swal.fire({
                    title: '操作失败',
                    text: `${title}失败！`,
                    icon: 'error'
                });
            }
        }

        async function sell(id, percent) {
            await confirmAndExecute(`卖出${percent * 100}%`, '/api/sell', {
                positionId: id,
                percent: percent
            });
        }

        async function deletePosition(id) {
            await confirmAndExecute('删除持仓', `/api/delete/${id}`, null);
        }

        async function deleteLimitOrder(id) {
            await confirmAndExecute('删除限价单', `/api/deleteLimitOrder/${id}`, null);
        }

        async function updateBalance(id, newBalance) {
            if (!newBalance) {
                await Swal.fire({
                    title: '操作失败',
                    text: '请输入新余额',
                    icon: 'error'
                });
                return;
            }
            await confirmAndExecute(`更新余额为${newBalance}`, '/api/updateBalance', {
                positionId: id,
                balance: newBalance
            });
        }

        async function buy(token){
            if (!token) {
                await Swal.fire({
                    title: '操作失败',
                    text: '请输入Token',
                    icon: 'error'
                });
                return;
            }
            await confirmAndExecute(`买入${token}`, '/api/buy', {
                token: token
            });
        }
    </script>
</body>

</html>